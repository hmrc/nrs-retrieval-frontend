
# commands for all ()
#   sbt scalafmtAll it/scalafmtAll
#   sbt scalafmtCheckAll it/scalafmtCheckAll
#
# for a single package, (package/config) example
#   sbt it/Test/scalafmt
#
# See https://scalameta.org/scalafmt/docs/configuration.html

version = 3.9.7
runner.dialect = scala3
preset = default
maxColumn = 140     // most existing code is set to 140
lineEndings = unix

project.git = true    // only applies to files known to git

# scala3 rewrites
rewrite.scala3.convertToNewSyntax = true   // if() to if...then, _ to *, etc
rewrite.scala3.removeOptionalBraces.enabled = true  //

spaces.beforeContextBoundColon = "Never"  //  [A:Bound]
spaces.inImportCurlyBraces = false    // remove spaces in import a.{b,c}
spaces.inInterpolatedStringCurlyBraces = false // remove spaces in start/end of s"${a}"

assumeStandardLibraryStripMargin = true // align multi-line strings
align.stripMargin = true

binPack.importSelectors = singleLine   // import all on single line

align {
  preset = most
  tokens = [ {code = "=>", owner = "Case|Type.Arg.ByName"}, "=", "<-", "->", "%", "%%", "should", "shouldBe", "shouldEqual", "shouldNot", "must" ]
  arrowEnumeratorGenerator = true
  openParenCallSite = false
  openParenDefnSite = false
}

binPack {
  parentConstructors = Always // layout of inner classes
}

continuationIndent {
  callSite = 2
  defnSite = 2
}

docstrings {
  style = keep  // no formatting comments
}

newlines {
  penalizeSingleSelectMultiArgList = false  # UNDOCUMENTED, in old .conf
  sometimesBeforeColonInMethodReturnType = true
}

rewrite {
  rules = [
    RedundantBraces,  // remove some {}
    RedundantParens,
    Imports,
    PreferCurlyFors,
    SortModifiers
    ]
  redundantBraces {
    maxBreaks = 100   # was maxLines
    includeUnitMethods = true
    stringInterpolation = true
    ifElseExpressions = true // remove {} from if..else
  }
  imports.sort = scalastyle // sort imports
  sortModifiers.preset = styleGuide  // order function modifiers (private, final, case, etc )
}
